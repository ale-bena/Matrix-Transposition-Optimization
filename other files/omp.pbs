#!/bin/bash
#PBS -N Cjob
#PBS -o ./Cjob.o
#PBS -e ./Cjob.e
#PBS -q short_cpuQ
#PBS -l walltime=0:55:00
#PBS -l select=1:ncpus=64:mem=900mb

# Modules for C
module load gcc91
gcc() {
    gcc-9.1.0 "$@"
}
gcc --version
# Select the working directory
cd /home/alessandro.benassi/project

lscpu

repetitions="25"
input_num=("16" "32" "64" "128" "256" "512" "1024" "2048" "4096")
n_threads=("1" "2" "4" "8" "16" "32" "64")


dir_path="/home/alessandro.benassi/project"
dir_name="resultomp_"

n=1

while [ -d "${dir_path}/${dir_name}${n}" ]; do
	  n=$((n+1))
done

new_dir="${dir_path}/${dir_name}${n}"
mkdir -p "$new_dir"


gcc seqfunc.c seqmain.c -fopenmp 

gcc -O0 -o seq1 seqfunc.c seqmain.c -fopenmp   

# SEQUENTIAL
for input in "${input_num[@]}"; do
	  echo "Running the program with $input"
	  ./seq1 "$input" "$repetitions"
done


# OMP
gcc ompfunc.c ompmain.c -fopenmp 
gcc -O2 -o omp ompfunc.c ompmain.c -fopenmp
export OMP_SCHEDULE=STATIC
for input in "${input_num[@]}"; do
	# echo "Running the program with $input"
	for i in "${n_threads[@]}"; do
		echo "Omp $input $i"
		./omp "$input" "$i" "$repetitions"
	done
done


# BLOCKS OMP
#blocksize=("8" "16" "32" "64")
gcc blocksompfunc.c blocksompmain.c -fopenmp 
gcc -O2 -o blockomp blocksompfunc.c blocksompmain.c -fopenmp
export OMP_SCHEDULE=STATIC
# for block in "${blocksize[@]}"; do
 	for input in "${input_num[@]}"; do
  	# echo "Running the program with $input"
	  for i in "${n_threads[@]}"; do
		    echo "Block $block $input $i"
		    ./blockomp "$input" "$i" "$repetitions" 
# "$block"
	  done
  done
# done



first="times_table.csv"
second="times_average.csv"

mv "$first" "${dir_name}${n}"
 
mv "$second" "${dir_name}${n}"

